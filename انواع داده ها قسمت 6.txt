٪ واع داده ها قسمت پنجم فرمت دهی رشته ها و روش عملگر درصد استفاده میکنیم
-------------------------------------------------------------
برای مثال ما دوتا متغیر داریم یکی عدد فلوت داره یکی عدد اینتیجر که میخوایم چاپ کنیم به این شکل: 
x = 1.256
y = 8 
print("x: ",round(x,1),"\ny:",y) 
میخوایم که عدد اعشاری مارو یک رقم بعد از ممیز شو چاپ کنه برامون و متغیر بعدی بره خط بعدی خب اگر ما متغیرهامون اگر زیاد باشه این کار سختیه برای همشون اینکارو انجام بدیم و بهینه هم نیست پس از عملگر ٪ باید استفاده کنیم 
این روش نسبت به روش های دیگه قدیمتره و روش های جدیدتریم هست ولی این روش هنوز استفاده میشه و منسوخ نشده از پایتون)(برای مثال:  
x = 2
y = 3.6
print("x is:  %i\ny is: %f\nz is: %i"%(x, y, 5+2))
این کد یک رشته را با استفاده از عملگر % فرمت می‌کند. در این کد، متغیر x به عنوان یک عدد صحیح با مقدار 2 و متغیر y به عنوان یک عدد اعشاری با مقدار 3.6 تعریف شده است. سپس با استفاده از عملگر %، مقادیر متغیرها در رشته قرار داده شده‌اند. 

در اینجا، %i برای نمایش مقادیر عددی صحیح و %f برای نمایش مقادیر اعشاری استفاده می‌شود. همچنین، با استفاده از \n، خط جدید در رشته قرار داده شده است

در نهایت، مقدار 5+2 به عنوان مقدار z در رشته قرار داده شده است

این کد برای فرمت دهی و نمایش مقادیر متغیرها در یک رشته استفاده می‌شود
________
در این روش ما حتما باید نوع متغیر رو مشخص کنیم 
مثلا: 
print("%i" %(2.446)) 
چون نوع ٪ رو اینتیجر مشخص کنیم اگر اعداد رو به صورت اعشاری بنویسیم تبدیل میکنه به اینتیجر 
یا اگر بخوایم یک کاراکتر یونیکد رو چاپ کنیم میتونیم  به این شکل استفاده کنیم

print("%C"%(23)) 
خروجی رو به ما چیزیو به ما نشون میده که عددش یا کدش ۲۳ هست
print("%C"%(x))
خودش رو برا ما چاپ میکنه چون خود کاراکتره نیازی به تبدیل نیست
چون ما گفتیم تمام کدهای ما حروف ما یا هرچیزی که در کیبورد داریم یا نداریم که قراره در حافظه ذخیره بشه چون کامپیوتر دستگاه محاسباتیش صفر و یک هست به صورت اعداد یونیکد یا اسکی کد معادلشو داریم که میتونیم استفاده کنیم ازش یعنی در پشت پرده چیزیم که ما در کیبورد داریم از قبل یا معادلش یونیکد یا اسکی کد اون هست و به اون شکل ذخیره میشه
print("%C"%(rd))
اگر دستور به این شکل بنویسیم به ما ارور میده چون ما نوشتیم ٪ c یعنی میخوایم کاراکتر چاپ کنیم بیشتر از یک کاراکتر میشه رشته 
print("%s %i"%("ramin", 28))

ramin28

مورد بعدی s هستش که مربوط به رشته های ما هستن که ما رامین رو چاپ کردیم بعد در کنارش درصد i گذاشتیم و یک عدد رو تعریف کردیم فقط باید حواسمون باشه که اینارو به ترتیب چاپ کنیم و هرچقدر بخوایم میتونیم استفاده کنیم 
print("deljo:  %s %i"%("ramin", 28))
مثلا من اینجا دلجو رو گذاشتم میاد سرجای رامین و بعدش خود رامین چاپ میشه به این شکل
deljo:  ramin28
________
print("%i"%(60))-----> برای اعداد صحیح
print("%d"%(60))-----> برای اعداد صحیح
print("%o"%(359))-----> برای اوکتال یا مبنای هشت
یعنی تبدیل مبنا میکنه

print("%x"%(359))-----> تبدیل اعداد بر مبنای ۱۶

اگر همین X در مبنای ۱۶ رو با حروف بزرگ بزاریم جلوی درصد میتونیم باهاش حروف های درمبنای ۱۶ رو به صورت کاراکتر بزرگ چاپ کنیم 
print("%e"%(12344668))-----> برای نشون دادن اعداد با نماد علمی استفاده میشه
اگر همینم بخوایم با حروف بزرگ نشون بده از E بزرگ استفاده میکنیم 


print("%f"%(۱.۲))-----> برای اعداد اعشاری ازش استفاده میکنیم 
که بصورت پیش فرض ۶رقم اعشار رو به ما نشون میده
حالا اگر بخوایم از F کوچیک این

 print("%f"%(2e+400))
چاپ کنیم به ما میگه inf یعنی بی نهایت
اگر F بزرگ باشه میگه INF



print("%r"%("ramin"))

خب اینم مثل رشته کاراکتر مارو چاپ میکنه با این تفاوت که دوطرف کاراکتر کتیشن میذاره
'ramin'
------------------------------------------------------------------
در فرمت دهی ما میتونیم بجز تایپ که اجباریه یعنی مشخص کردن نوع متغیر از اینها هم استفاده کنیم
[(key)]  [flag]  [w]  [.p] type

اگر هم بخوایم استفاده کنیم به صورت اولویت بندیه یعنی ترتیب باید رعایت بشه
-----------------------------------------------------------------
حالا مثال [.p] خب فرض کنید ما یک عدد اعشاری داریم به این شکل که به صورت پیش فرض ۶ رقم اونو به ما نشون میده هرچقدرم که باشه 
x = 3.6732736479
خب در اعشار وقتی بیشتر از ۶رقم باشه ما بخوایم چاپش کنیم از رقم ششمی ببعد اگر عدد بزرگی باشه کردش میکنه مثلا بعد از ۷۳ عدد۶ هستش که از ۳ بزرگتره ۷۳ تبدیل میشه به ۷۴ یعنی گردش کرده اضافه کرده ب این چون عدد بزرگتریه حالا اگر ما بصورت دلخواه در فرمت دهی بخوایم بگیم چ تعداد از اعشار ما چاپ بشه به این شکل از این [.p] مقدارشو مشخص میکنیم
x = 3.6732736479
print("%.2f" %(x)) 

۳.۶۷
به ما نمایش میده با استفاده از ٪.2و نوع متغیر یعنی دوتا از کاراکتر های اعشار مارو چاپ کن
حتی میتونیم بگیم بیشتر چاپ کنه
print("%.8f" %(x))
حتی بیشتر از مقداری که به صورت پیش فرض نشون میده رو میتونیم بگیم چاپ کنه
---------------------------------------------------------------

مورد بعدی طول میدان هست مشخص میکنه که این چیزی که داریم چاپ میکنیم برای مثال چه اندازه ای براش بگیره
مثلا 
x = 3.6732736479
print("%4.2f" %(x)) 
۳.۶۷
خب خروجی ما ۳.۶۷ که روهم رفته چهار کاراکتره اگر ما طول میدانش رو بزاریم 0یا 4 هیچ مشکلی ایجاد نمیکنه ولی اگر بیشتر از این باشه چون طولش رو بیشتر میکنیم 
x = 3.6732736479
print("%25.2f" %(x)) 
 
                                          ۳.۶۷
این اندازه فاصله میندازه یا همون طول میدان
که استفادش اختیاریه
------------------------------------------------------------------
بعد فلگ رو داریم  [flag]  که اختیاریه ۳تا حالته فلگ میتونه مثبت یا منفی یا صفر باشه چیزایی که مینویسیم بهمون نشون میده
x =-3.6732736479
print("%+6.2f" %(x)) 
اگر عدد ما منفی باشه خودش نشون داده میشه ولی اگر عدد ما مثبت باشه خب به صورت پیشفرض بدون علامت نشون میده اگر بخوایم علامت رو نشون بده با استفاده از فلگ اینکارو انجام میدیم
حالا به اینم توجه کنیم که طول میدان رو من اینجا ۶ گذاشتم
و خروجی من شده  +۳.۶۷
این میشه ۵ کاراکتر و فقط یک جای خالی یا فاصله طول میدان برای ما گذاشته
print("%-6.2f" %(x))

حالا اگر بجای + منفی بذاریم این جای خالی یا طول میدان ما جای خالیش میره سمت راست اگر نزاریم سمت چپ میمونه 

print("%06.2f" %(x))
و اگر صفر بذاریم این فضای خالی رو برای ما با صفر پر میکنه
------------------------------------------------------------------
مورد آخر مربوط میشه به دیکشنری ها [(key)] که هنوز درموردش نخوندیم

که در جلسات قبل به این شکل توضیح دادیم
d ={'a':2,'b':7} 
مثلا این متغیرمادیکشنریه  سمت چپی کلیده سمت راستی مقداره
که در جلسات بعد درموردش صحبت میشه
حالا اگر بخوایم از دیکشنری استفاده کنیم یا 
[(key)]
قبلا گفتیم برا فرمت دهی باید نوع رو که مشخص کردیم برای چاپ کردن باید به ترتیب بنویسیم

print("x is:  %i\ny is: %f\nz is: %i"%(x, y, 5+2))


 حالا با استفاده از این میتونیم ترتیب بندی رو بهم بزنیم یا نیازی نیست به ترتیب بنویسیم به این شکل
 d ={'a':2,'b':7} 
print("%(a)f\n%(b)i" % (d)) 
اینجا ما گفتیم که این دیکشنری ما هست 
بعد نوع a رو گفتیم که اعداد اعشار هست  و گفتیم در خط بعد b مارو چاپ کن و نوعش اینتیجر هست حالا برای چاپ کردن فقط اسم دیکشنری رو نوشتیم دیگه نیازی به ترتیب نیست خودش به ترتیب همون دیکشنری چاپ میکنه 
print("%(b)f\n%(a)i" % (d)) 
الان ما b رو با a عوض کردیم و ترتیب رو عوض کردیم و برای ما چاپ کرد که این قابلیت رو دیکشنری داره و میتونیم ازش استفاده کنیم 
___________
حالا اگر ما بخوایم همین حالت هارو از کاربر بگیریم مثلا تعداد کاراکتر های اعشار و طول میدان: 
y = 3.6732753257
p = int(input("tool: ")) 
z = int(input("feloat: ")) 
print("%*.*f" % (z, p, y))  
خب به این شکل ما مشخص کردیم y عدد اعشار رو که این هست بعد در متغیر p طول میدان رو از کاربر میگیریم و در z تعداد  اعداد اعشاری که باید به ما نشون بده
print("%0*.*f" % (z, p, y))
حالا اگر صفر بزاریم هر عددی کاربر بزاره بجای فاصله صفر میذاره برای ما
-----------------------------------------------------------------------
